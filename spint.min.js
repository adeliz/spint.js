(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.spint=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var spint={};function pointValue(x,y,power,smoothing,data){var nominator=0;var denominator=0;for(var i=0;i<data[0].length;i++){var dist=Math.sqrt((x-data[0][i])*(x-data[0][i])+(y-data[1][i])*(y-data[1][i])+smoothing*smoothing);if(dist<1e-10){return data[2][i]}nominator=nominator+data[2][i]/Math.pow(dist,power);denominator=denominator+1/Math.pow(dist,power)}var value;if(denominator>0){value=nominator/denominator}else{value=null}return value}idw=function(data,grid,power,smoothing){var valuesGrid=[];for(var i=1;i<=grid.xcellcount;i++){var yvalues=[];for(var j=1;j<=grid.ycellcount;j++){yvalues.push(pointValue(grid.y0+j*grid.xcellsize,grid.x0+i*grid.xcellsize,power,smoothing,data))}valuesGrid.push(yvalues)}return valuesGrid};module.exports={idw:idw}},{}]},{},[1])(1)});
